  
//------------------------------------------------------------------------------
// Copyright 2006-07, Cadence Design Systems, Inc.
//
// Generated by 'svpp' pre-processor. DO NOT EDIT.
//
// File     : sqr_if_base_ovm_sequence_item_ovm_sequence_item.svi
// Origin   : class 'sqr_if_base' in file /usr/local/cds/ovm-2.0/src/tlm/sqr_ifs.svh
//
// Specializations found at:
//  file=/usr/local/cds/ovm-2.0/src/tlm/sqr_connections.svh,line=105
//  file=/usr/local/cds/ovm-2.0/src/tlm/sqr_connections.svh,line=84
//  file=/usr/local/cds/ovm-2.0/src/tlm/sqr_connections.svh,line=61
//  file=/usr/local/cds/ovm-2.0/src/tlm/sqr_connections.svh,line=54
//------------------------------------------------------------------------------

`ifndef sqr_if_base_ovm_sequence_item_ovm_sequence_item
`define sqr_if_base_ovm_sequence_item_ovm_sequence_item

typedef class ovm_sequence_item;
typedef class ovm_sequence_item;

virtual class sqr_if_base_ovm_sequence_item_ovm_sequence_item;

  virtual task get_next_item(output ovm_sequence_item t);
    ovm_report_error("get_next_item", `SEQ_ITEM_TASK_ERROR);
  endtask

  virtual task try_next_item(output ovm_sequence_item t);
    ovm_report_error("try_next_item", `SEQ_ITEM_TASK_ERROR);
  endtask

  virtual function void item_done(input ovm_sequence_item t = null);
    ovm_report_error("item_done", `SEQ_ITEM_FUNCTION_ERROR);
  endfunction

  virtual task wait_for_sequences();
    ovm_report_error("wait_for_sequences", `SEQ_ITEM_TASK_ERROR);
  endtask

  virtual function bit has_do_available();
    ovm_report_error("has_do_available", `SEQ_ITEM_FUNCTION_ERROR);
    return 0;
  endfunction

  virtual function void put_response(input ovm_sequence_item t);
    ovm_report_error("put_response", `SEQ_ITEM_FUNCTION_ERROR);
  endfunction

  // tlm_blocking_slave_if
  virtual task get(output ovm_sequence_item t);
    ovm_report_error("get", `SEQ_ITEM_TASK_ERROR);
  endtask

  virtual task peek(output ovm_sequence_item t);
    ovm_report_error("peek", `SEQ_ITEM_TASK_ERROR);
  endtask

  virtual task put(input ovm_sequence_item t);
    ovm_report_error("put", `SEQ_ITEM_TASK_ERROR);
  endtask

endclass
  

`endif

