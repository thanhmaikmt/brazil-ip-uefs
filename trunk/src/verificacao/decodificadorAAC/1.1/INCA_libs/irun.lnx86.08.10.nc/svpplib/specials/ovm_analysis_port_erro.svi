  
//------------------------------------------------------------------------------
// Copyright 2006-07, Cadence Design Systems, Inc.
//
// Generated by 'svpp' pre-processor. DO NOT EDIT.
//
// File     : ovm_analysis_port_erro.svi
// Origin   : class 'ovm_analysis_port' in file /usr/local/cds/ovm-2.0/src/tlm/ovm_ports.svh
//
// Specializations found at:
//  file=/usr/local/cds/ovm-2.0/src/methodology/ovm_push_driver.svh,line=28
//  file=/usr/local/cds/ovm-2.0/src/tlm/tlm_req_rsp.svh,line=40
//  file=/usr/local/cds/ovm-2.0/src/tlm/tlm_req_rsp.svh,line=44
//  file=/usr/local/cds/ovm-2.0/src/methodology/ovm_in_order_comparator.svh,line=57
//  file=/usr/local/cds/ovm-2.0/src/compatibility/avm_compatibility.svh,line=168
//  file=/usr/local/cds/ovm-2.0/src/methodology/ovm_driver.svh,line=28
//  file=/usr/local/cds/ovm-2.0/src/tlm/tlm_fifo_base.svh,line=55
//------------------------------------------------------------------------------

`ifndef ovm_analysis_port_erro
`define ovm_analysis_port_erro

typedef class erro;

class ovm_analysis_port_erro
  extends ovm_port_base_tlm_if_base_erro_erro;

  function new (string name, ovm_component parent);
    super.new (name, parent, OVM_PORT, 0, OVM_UNBOUNDED_CONNECTIONS);
    m_if_mask = `TLM_ANALYSIS_MASK;  
  endfunction

  virtual function string get_type_name();
    return "ovm_analysis_port";
  endfunction

  // analysis port differs from other ports in that it broadcasts
  // to all connected interfaces. Ports only send to the interface
  // at the index specified in a call to set_if (0 by default).
  function void write (input erro t);
    tlm_if_base_erro_erro tif;
    for (int i = 0; i < this.size(); i++) begin
      tif = this.get_if (i);
      assert (tif != null);
      tif.write (t);
    end 
  endfunction

endclass
  

`endif

