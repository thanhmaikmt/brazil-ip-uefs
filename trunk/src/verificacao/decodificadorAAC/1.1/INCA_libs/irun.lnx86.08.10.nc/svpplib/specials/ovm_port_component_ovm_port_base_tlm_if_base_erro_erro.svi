  
//------------------------------------------------------------------------------
// Copyright 2006-07, Cadence Design Systems, Inc.
//
// Generated by 'svpp' pre-processor. DO NOT EDIT.
//
// File     : ovm_port_component_ovm_port_base_tlm_if_base_erro_erro.svi
// Origin   : class 'ovm_port_component' in file /usr/local/cds/ovm-2.0/src/base/ovm_port_base.svh
//
// Specializations found at:
//  file=/usr/local/cds/ovm-2.0/src/base/ovm_port_base.svh,line=206
//------------------------------------------------------------------------------

`ifndef ovm_port_component_ovm_port_base_tlm_if_base_erro_erro
`define ovm_port_component_ovm_port_base_tlm_if_base_erro_erro

typedef class ovm_port_base_tlm_if_base_erro_erro;

class ovm_port_component_ovm_port_base_tlm_if_base_erro_erro extends ovm_port_component_base;
   
  ovm_port_base_tlm_if_base_erro_erro m_port;

  function new (string name, ovm_component parent, ovm_port_base_tlm_if_base_erro_erro port);
    super.new(name,parent);
    if (port == null)
      ovm_report_fatal("Bad usage", "Null handle to port");
    m_port = port;
  endfunction

  virtual function string get_type_name();
    if(m_port == null) return "ovm_port_component";
    return m_port.get_type_name();
  endfunction
    
  virtual function void resolve_bindings();
    m_port.resolve_bindings();
  endfunction
    
  function ovm_port_base_tlm_if_base_erro_erro get_port();
    return m_port;
  endfunction

  function void do_display (int max_level=-1, int level=0,
                            bit display_connectors=0);
    m_port.do_display(max_level,level,display_connectors);
  endfunction

  virtual function void get_connected_to(ref ovm_port_list list);
    m_port.get_connected_to(list);
  endfunction

  virtual function void get_provided_to(ref ovm_port_list list);
    m_port.get_provided_to(list);
  endfunction

  function bit is_port ();
    return m_port.is_port();
  endfunction

  function bit is_export ();
    return m_port.is_export();
  endfunction

  function bit is_imp ();
    return m_port.is_imp();
  endfunction

endclass
  

`endif

